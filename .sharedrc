# -*- mode: sh; -*-
# vim: set ft=sh sw=2 sts=2:

if command -v hub >/dev/null; then
  git() {
    command hub "$@"
  }
fi

# git_prompt_info accepts 0 or 1 arguments (i.e., format string)
# returns text to add to bash PS1 prompt (includes branch name)
git_prompt_info () {
  local g="$(command git rev-parse --git-dir 2>/dev/null)"
  if [ -n "$g" ]; then
    local r
    local b
    local d
    local s
    # Rebasing
    if [ -d "$g/rebase-apply" ] ; then
      if test -f "$g/rebase-apply/rebasing" ; then
        r="|REBASE"
      fi
      b="$(command git symbolic-ref HEAD 2>/dev/null)"
    # Interactive rebase
    elif [ -f "$g/rebase-merge/interactive" ] ; then
      r="|REBASE-i"
      b="$(cat "$g/rebase-merge/head-name")"
    # Merging
    elif [ -f "$g/MERGE_HEAD" ] ; then
      r="|MERGING"
      b="$(command git symbolic-ref HEAD 2>/dev/null)"
    else
      if [ -f "$g/BISECT_LOG" ] ; then
        r="|BISECTING"
      fi
      if ! b="$(command git symbolic-ref HEAD 2>/dev/null)" ; then
        if ! b="$(command git describe --exact-match HEAD 2>/dev/null)" ; then
          b="$(cut -c1-7 "$g/HEAD")..."
        fi
      fi
    fi

    # Dirty Branch
    local newfile='?? '
    if [ -n "$ZSH_VERSION" ]; then
      newfile='\?\? '
    fi
    d=''
    s=$(command git status --porcelain 2> /dev/null)
    [[ $s =~ "$newfile" ]] && d+='+'
    [[ $s =~ "M " ]] && d+='*'
    [[ $s =~ "D " ]] && d+='-'

    printf "${1-"(%s) "}" "${b##refs/heads/}$r$d"
  fi
}

# Do we need Linux or BSD Style?
lsc=
if ls --color -d $PWD &>/dev/null 2>&1
then
  lsc="--color=tty"
else
  lsc="-G"
fi

alias cd..='cd ..'
alias ..='cd ..'
alias ll="ls $lsc -l"
alias l="ls $lsc -F -lah"
alias la="ls $lsc -a"
alias gap='git add -p'
alias gb='git branch'
alias gc='git commit -v'
alias gd='git diff'
alias gdc='git diff --cached'
alias gp='git push'
alias gpr='git pull --rebase'
alias gst='git status'
alias grc='git rebase --continue'
alias gra='git rebase --abort'
alias grep='command grep --color=auto'
alias reset-authors='git commit --amend --reset-author -C HEAD'
alias vi='vim'

editor() {
    args=(-c)
    alt=""
    if [[ -n "$TMUX" ]]; then
        args+=(-nw)
    elif [[ -z "$SSH_CONNECTION" ]]; then
        args+=(-n)
    fi

    if [[ -e "$EMACS_SOCKET_NAME" ]]; then
        args+=("-s" "$EMACS_SOCKET_NAME")
    else
        alt=" --alternate-editor=''"
    fi

    if [[ "--echo-command" = "$1" ]]; then
        echo emacsclient "${args[@]}""$alt"
    else
        if [[ -n "$alt" ]]; then
            args+=("-a" "")
        fi
        command emacsclient "${args[@]}" "$@"
    fi
}

setup-editor-vars() {
    export VISUAL="$(editor --echo-command)"
    export EDITOR="$VISUAL"
}

setup-editor-vars

alias sudoedit="sudo -e"

E() {
    SUDO_EDITOR="$EDITOR" sudoedit $@
}

e() {
    editor "$@"
}

__warn__hr() {
    {
        echo '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'
        echo '*-*   Hey! the `hr` command is now `jd`, bub.   *-*'
        echo '*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'
        echo
    } >&2
}

hr() {
    __warn__hr
    jd "$@"
}

hcd() {
    __warn__hr
    jd cd "$@"
}

hclone() {
    __warn__hr
    jd clone "$@"
}

# http://twistedcode.blogspot.com/2008/04/lscolors-explained.html
export CLICOLOR=1
export LSCOLORS=Dxfxcxdxbxegedabadacad
export ZLS_COLORS=$LSCOLORS
export RI="--format ansi -T"
export GREP_COLOR='1;32'
export LESS=FRX
export JRUBY_OPTS="-J-XX:+TieredCompilation -J-XX:TieredStopAtLevel=1 -J-noverify"

fix-branch-name() {
    local BRANCH="${1:-main}"
    git checkout -b "$BRANCH" 2>/dev/null || git checkout "$BRANCH"
    git push -u origin "$BRANCH:$BRANCH" >/dev/null
    hub api 'repos/{owner}/{repo}' -X PATCH -F default_branch="$BRANCH" >/dev/null
    git branch -D master 2>/dev/null
    git push origin :master 2>/dev/null
}
