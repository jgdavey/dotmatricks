#!/usr/bin/env bash
# Usage: hr clone [-f] <repo>
#
# Summary: Clone down an HR project into $SOURCE_DIR
#
# Help: Clone down an HR project into $SOURCE_DIR. If you provide
# the "-f" flag, the repository will be redownloaded.
#
# Note: This command requires $SOURCE_DIR to be set.

if [ -z "$SOURCE_DIR" ]; then
  echo "Error: \$SOURCE_DIR not set" >&2
  exit 1
fi

if [ "$1" = "--complete" ]; then
  echo "-f"
  [ -f "$HOME/.repos" ] && cat "$HOME/.repos"
  exit 0
fi

if [ -z "$1" ]; then
  {
    hr-help clone
    echo
    echo "ERROR: please provide a repo"
  } >&2
  exit 1
fi

if [ "x-f" = "x$1" ]; then
  shift
  rm -rf "$SOURCE_DIR/`basename $1 .git`"
fi

basename="`basename $1 .git`"
path="$SOURCE_DIR/$basename"
new=
url=

case "$1" in
  *:*) url="$1" ;;
  */*) url="git@github.com:$1.git" ;;
  *)   url="git@github.com:$ORGANIZATION_NAME/$1.git" ;;
esac

if [ ! -d "$path" ]; then
  new=1
fi

setup_bin_path() {
  cd "$path"
  ln -sf ../bin .git
  mkdir -p .git/safe
}

clone_if_necessary() {
  local example
  if [ -n "$new" ]; then
    git clone "$url" "$path" || return 1
    for example in "$path"/config/*.example.yml; do
      cp "$example" "${example%.example.yml}.yml"
    done 2>/dev/null
    if [ -f "$path/.rvmrc" ] && command -v __rvm_trust_rvmrc >/dev/null; then
      __rvm_trust_rvmrc "$path/.rvmrc"
    fi
  fi
  return 0
}

script_setup() {
  if [ -n "$new" -a -x script/setup ]; then
    script/setup
  elif [ -n "$new" -a -x bin/setup ]; then
    bin/setup
  fi
}

setup_git_submodules() {
  cd "$path"
  git submodule init
  git submodule update
  cd ..
}

hclone() {
  clone_if_necessary || return 1
  setup_git_submodules
  setup_bin_path
  script_setup
}

hclone "$@" >&2 && echo && echo "$path"
