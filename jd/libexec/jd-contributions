#!/usr/bin/env ruby
#
# Usage: jd contributions [<args>]
#
# Summary: Show sorted list of git commit authorship totals
#
# Help: From within a folder tracked by git, run `jd contributions`. The
# output is a sorted list of names and the number of commits they've
# contributed. Any arguments are forwarded to `git log`.
#
# Examples:
# $ jd contributions                      # for entire repo history
# $ jd contributions -n30                 # authorship for last 30 commits
# $ jd contributions --since="last week"
require 'yaml'
require 'pathname'

usernamefile = Pathname(File.expand_path("~/.gitusernames"))
usernames = if usernamefile.exist?
              (YAML.load_file(usernamefile) || {}).fetch("usernames", {})
            else
              {}
            end

args = ARGV.map{ |s| "'#{s}'" }.join(" ")

log = `git log --format="%an|||%b##END##" #{args}`.split("##END##\n")

total = log.length

to_username = ->(str) {
  u = str.strip.gsub(/^"|"$/, "")
  usernames.fetch(u, u)
}

names = log.flat_map do |line|
  authors, message = line.split("|||", 2)
  names = authors.split(/,? and |, /).map(&to_username)
  names += message.scan(/Co-authored-by: ?([^<]*) ?<.*$/).flat_map { |md|
    md.map(&to_username)
  }
  names
end

counts = names.each_with_object(Hash.new(0)) do |name, obj|
  obj[name] += 1
end

counts["TOTAL"] = total

### Table printing
def print_table(labels, rows)
  columns = labels.each_with_object({}) { |(col,label),h|
    h[col] = { label: label,
               width: [rows.map { |g| g[col].to_s.size }.max, label.size].max } }
  header = "| #{ columns.map { |_,g| g[:label].ljust(g[:width]) }.join(' | ') } |"
  divider = "|-#{ columns.map { |_,g| "-"*g[:width] }.join("-+-") }-|"
  puts divider
  puts header
  puts divider
  rows.each do |h|
    str = columns.keys.map { |k| h[k].to_s.ljust(columns[k][:width]) }.join(" | ")
    puts "| #{str} |"
  end
  puts divider
end

labels = { commits: "Commits", name: "Name" }

rows = counts.map do |name, count|
  { commits: count, name: name }
end.sort_by { |h| -h[:commits] }

print_table labels, rows
