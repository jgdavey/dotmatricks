#!/usr/bin/env bash
set -e

print=""
if [ "$1" = "-" ]; then
  print=1
  shift
fi

shell="$1"
if [ -z "$shell" ]; then
  shell="$(basename "$SHELL")"
fi

if [ -z "$print" ]; then
  case "$shell" in
  bash )
    profile='~/.bashrc.local'
    ;;
  zsh )
    profile='~/.zshrc.local'
    ;;
  * )
    profile='your profile'
    ;;
  esac

  { echo "# Load jd automatically by adding"
    echo "# the following to ${profile}:"
    echo
    echo "eval \"\$(${_JD_ROOT}/bin/jd init -)\""
    echo
  } >&2

  exit 1
fi

echo "export PATH=\"\${PATH}:${_JD_ROOT}/bin\""

case "$shell" in
bash | zsh )
  echo "source \"${_JD_ROOT}/completions/jd.${shell}\""
  ;;
esac

wrapper_function=
# hack for bash where numbers are not valid function name
[ "$shell" = "bash" ] && wrapper_function=_jd_wrapper

commands=(`jd commands --sh`)
IFS="|"
cat <<EOS
${wrapper_function:-jd}() {
  local command="\$1"
  if [ "\$#" -gt 0 ]; then
    shift
  fi

  case "\$command" in
  ${commands[*]})
    eval \`jd "sh-\$command" "\$@"\`;;
  *)
    command jd "\$command" "\$@";;
  esac
}
EOS

# related to the bash hack above
[ -n "$wrapper_function" ] && echo "alias jd=${wrapper_function}"

# Aliases for making transition easier
echo "source \"${_JD_SHARE}/aliases\""
