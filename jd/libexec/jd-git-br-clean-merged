#!/usr/bin/env bash
#
# Usage: jd git-branches
#
# Summary: print a pretty table summarizing git branches, in order

if [ "$1" = "--complete" ]; then
  exit
fi

defaultbranch="$(git config init.defaultbranch)"
defaultbranch="${defaultbranch:-main}"
currentbranch="$(git rev-parse --abbrev-ref HEAD)"

confirm() {
  while true; do
    read -n 1 -r -p "${1:-Are you sure?} [y/N] " response
    echo
    case "$response" in
        [yY])
            return 0
            ;;
        [nN])
            return 1
            ;;
        *)
          echo "Choose 'n' or 'y'";;
    esac
  done
}

# if [ -n "$(git status --porcelain)" ]; then
#   echo "ERROR: You have a dirty working copy. This command would remove any files not already checked in"
#   exit 1
# fi

case "$currentbranch" in
  master|main|develop|"$defaultbranch")
  ;;
  *)
    confirm "Not on your default branch. Continue?" || exit 1
    ;;
esac

git branch --merged \
  | grep -v "master\|release\|develop\|main\|${defaultbranch}\|${currentbranch}" \
  | while read br; do git branch -d $br; done
