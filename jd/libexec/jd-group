#!/usr/bin/env ruby
# Usage: jd group [options]
# Summary: Print a table under a grouped heading
# Help: Given a flat table of information, group by the first "column"
# and print beneath it as a heading.

require 'optparse'
require 'ostruct'

options = OpenStruct.new
options.field_separator = /,|:|\t/
options.output_field_separator = "\n"

parser = OptionParser.new do |opts|
  opts.banner = "Usage: jd group [options]"

  opts.on("-f", "--field-separator C", "Field separator") do |c|
    options.output_field_separator = c or abort("choose a character for output_field_separator")
  end

  opts.on("-o", "--output-field-separator C", "Output field separator") do |c|
    options.output_field_separator = c or abort("choose a character for output_field_separator")
  end

  opts.on("-h", "--help" ) do
    puts parser
    exit 0
  end
end

if ARGV[0] == "--complete"
  ARGV.shift
  parser.top.compsys({}, {}) do |o, d|
    desc = d.split("(", 2).first.gsub(/[\[\]]/, '\\\\\&')
    puts "#{o}[#{desc}]"
  end
  exit 0
end

parser.parse!

all = []
ARGF.each_line do |line|
  all << line.chomp.split(options.field_separator, 2)
end

all.group_by(&:first).each do |heading, grouped|
  puts heading
  puts grouped.flat_map { |(_, *rest)| rest }.join(options.output_field_separator)
  puts
end
