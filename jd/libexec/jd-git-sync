#!/usr/bin/env bash
#
# Usage: jd git-sync
#
# Summary: Fetch and sync all git branches with their remote tracking branches

if [ "$1" = "--complete" ]; then
  echo "-q"
  exit
fi

# Defaults
quiet=

while [ $# -gt 0 ]; do
  case "$1" in
    -q|--quiet) quiet="--quiet" ;;
    (--) shift; break ;;
    (*) break ;;
  esac
  shift
done

git fetch $quiet --all -Pp

if [ -n "$(git status --porcelain | egrep -v '^\?\? ')" ]; then
  echo "ERROR: You have a dirty working copy. This command would remove any files not already checked in"
  exit 1
fi

defaultbranch="$(git config init.defaultbranch)"
defaultbranch="${defaultbranch:-main}"
currentbranch="$(git rev-parse --abbrev-ref HEAD)"

confirm() {
  while true; do
    read -n 1 -r -p "${1:-Are you sure?} [y/N] " response
    echo
    case "$response" in
        [yY])
            return 0
            ;;
        [nN])
            return 1
            ;;
        *)
          echo "Choose 'n' or 'y'";;
    esac
  done
}

set -e

git for-each-ref --format '%(refname:short):%(upstream:short)' 'refs/heads' | egrep -v ':$' | while IFS=: read local remote; do
  if [ -z "$quiet" ]; then
    echo "Syncing ${local} with ${remote}"
  fi
  git checkout -q "$local"
  git merge $quiet --ff-only "$remote"
done

git checkout -q "$currentbranch"
