#!/usr/bin/env ruby
# Usage: jd git-sync [opts]
# Summary: Fetch and sync all git branches with their remote tracking branches

require 'optparse'
require 'ostruct'

require File.join(ENV["_JD_ROOT"], "share", "lib", "gitsync.rb")

is_tty = $stdout.respond_to?(:tty?) && $stdout.tty?

OPTIONS = OpenStruct.new(quiet: false, colorize: is_tty)

parser = OptionParser.new do |opts|
  opts.banner = "Usage: jd git-sync [options]"

  opts.on("-q", "--quiet", "Output less stuff") do |d|
    OPTIONS.quiet = true
  end

  opts.on("--[no-]color", "Colorize output") do |c|
    OPTIONS.colorize = c
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end

if ARGV[0] == "--complete"
  parser.send(:visit, :compsys, {}, {}) {|o, d|
    puts "#{o}[#{d.gsub(/[\\\"\[\]]/, '\\\\\&')}]"
  }
  exit 0
end

parser.parse!

Gitsync.new(**OPTIONS.to_h).actions.each do |action|
  message = action.formatted(OPTIONS.colorize)
  case action
  when Gitsync::Error
    $stderr.puts message
  when Gitsync::Update
    system *action.command
    puts message
  else
    puts message
  end
end
