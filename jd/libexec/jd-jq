#!/usr/bin/env bash
# Usage: jd jq [FILE]
# Summary: Use jq within an fzf preview
#
# Help: Given stdin, uses that as the JSON input to jq
#
# This utility requires fzf and jq to be installed and on the PATH

jqpaths() {
  set -e

  prog='
  [
    path(..)  |
    map(
      # use generic object index syntax if key contains non-alphanumeric characters or starts with a digit
      select(type == "string" and (test("[^a-zA-Z0-9_]") or test("^[0-9]"))) |= "[\"" + . + "\"]"
    ) |
    map(
      # numbers are assumed to be array indexes only
      select(type == "number") |= "[]"
    ) | join(".")
  ] | sort | unique | .[] | split(".[") | join("[") | "." + .
  '

  command jq --raw-output "$prog" "$@" | sort | uniq
}

if [[ $# -eq 0 ]] && [[ -t 0 ]]; then
  exec jd-help jq
fi

args=("$@")

# collect jq inputs and args
rev=()
for i in "${args[@]}"; do rev=("$i" "${rev[@]}"); done
inputs=()
for i in "${rev[@]}"; do
  case "$i" in
    (-) inputs=("-"); break;;
    (--) break;;
    *) if [[ -f "$i" ]]; then
         inputs=("$i" "${inputs[@]}")
       else
         break
       fi;;
  esac
done

filter="${rev[${#inputs[@]}]:-.}"
case "$filter" in
  -*) filter=".";;
esac

files_idx=$(( ${#args[@]} - ${#inputs[@]} ))
rest=("${args[@]::$files_idx}")

for i in "${!rest[@]}"; do
  if [[ "${rest[$i]}" = "$filter" ]]; then
    unset 'rest[i]'
  fi
done

# No inputs, so use stdin
if [[ ${#inputs[@]} -lt 1 ]] || [[ "${inputs[0]}" = "-" ]]; then
  input="$(mktemp)"
  trap 'rm -f "$input"' EXIT
  cat /dev/stdin > "$input"
  inputs=("$input")
fi

INITIAL_QUERY="$filter"

JQ_PREVIEW_CMD="command jq ${rest[@]} {q} ${inputs[@]}"

jqpaths "${inputs[@]}" | fzf \
    --ansi \
    --preview "$JQ_PREVIEW_CMD" \
    --preview-window="down:86%" \
    --height="99%" \
    --query="$INITIAL_QUERY" \
    --bind "tab:replace-query" \
    --bind "return:become($JQ_PREVIEW_CMD)" \
    --bind "ctrl-v:preview-page-down,alt-v:preview-page-up" \
    --bind "alt->:preview-bottom,alt-<:preview-top" \
    --bind "ctrl-o:print-query" \
    --header 'Ctrl-o: print query / Enter: print results / Tab: change query to selected' \
    --header-lines=0
