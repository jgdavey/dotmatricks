[alias]
	aa = add -A .
	add-untracked = !"git status --porcelain | awk '/\\?\\?/{ print $2 }' | xargs git add"
	aliases=!git config -l | grep '^alias' | cut -c 7- | sort
	b  = branch
	br = branch
    bs = "!git for-each-ref --sort='-authordate' --format='%(refname:lstrip=2)|%(authordate:short)|%(authoremail:localpart)|%(subject)' refs/heads | column -t -s'|'"
    br-clean-merged = "!jd git-br-clean-merged"
	change-commits = "!f() { VAR1=$1; VAR='$'$1; OLD=$2; NEW=$3; echo \"Are you sure for replace $VAR  $OLD => $NEW ?(Y/N)\";read OK;if [ \"$OK\" = 'Y' ] ; then shift 3; git filter-branch --env-filter \"if [ \\\"${VAR}\\\" = '$OLD' ]; then export $VAR1='$NEW';echo 'to $NEW'; fi\" $@; fi;};  f "
	cheddar = commit --amend -CHEAD
	ci = commit
	co = checkout
	cp = cherry-pick
	doff = reset HEAD^
	find = !sh -c 'git ls-files | grep --color=always -i "$@" | less -FRSX' -
	fixup = commit --fixup
	pruneremote = remote prune origin
	put = push origin HEAD
	reset-authors = commit --amend --reset-author -CHEAD
	ri = rebase --interactive
	rmbranch = "!f(){ git branch -d ${1} && git push origin --delete ${1}; };f"
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
	squash = commit --squash
	st = status
	tr = log --graph --oneline --decorate --color
	tre = log --pretty=format:'%C(auto)%h%d%Creset %s  %C(auto,bold blue)%an%Creset %C(auto,green)(%ar)%Creset' --graph
	tree = tre --all
[branch]
	autosetuprebase = always
[color]
	ui = auto
[core]
	excludesfile = ~/.cvsignore
	whitespace = warn
[help]
	autocorrect = 10
[interactive]
	singlekey = true
[merge]
	summary = true
[merge "bundlelock"]
	name = lock Gemfile
	driver = bundle install
[merge "bundle"]
	name = bundle
	driver = bundle
[push]
	default = tracking
[rebase]
	autosquash = true
[diff]
	algorithm = patience
[include]
	path = ~/.gitconfig.local
[fetch]
	prune = true
[magit]
	hideCampaign = true
[init]
	defaultBranch = main
